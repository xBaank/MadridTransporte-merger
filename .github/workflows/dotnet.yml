name: .NET Build and Release

on:
  push:
    branches: [ "main" ]
    tags: [ "*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v4

    - name: Extract Version from Tag (Unix)
      id: get_version_unix
      if: ${{ matrix.os != 'windows-latest' }}
      run: |
        if [[ "${{ github.ref }}" == refs/tags/* ]]; then
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        else
          echo "VERSION=0.0.1" >> $GITHUB_ENV  # Default version for non-tag builds
        fi

    - name: Extract Version from Tag (Windows)
      id: get_version_windows
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        if ($env:GITHUB_REF -like "refs/tags/*") {
            $version = $env:GITHUB_REF.Substring(10)  # Remove the "refs/tags/" prefix
            Write-Host "VERSION=$version" | Out-File -Append -FilePath $env:GITHUB_ENV
        } else {
            Write-Host "VERSION=0.0.1" | Out-File -Append -FilePath $env:GITHUB_ENV  # Default version for non-tag builds
        }


    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Restore dependencies
      run: dotnet restore Merger.sln

    - name: Build
      run: dotnet build --configuration Release --no-restore /p:Version=${{ env.VERSION }} Merger.sln

    - name: Publish
      run: dotnet publish -c Release -o publish /p:Version=${{ env.VERSION }} Merger.sln

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: dotnet-build-${{ matrix.os }}
        path: publish

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')  # Runs only on tag push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        name: dotnet-build-ubuntu-latest
        path: publish/ubuntu
      continue-on-error: true

    - uses: actions/download-artifact@v4
      with:
        name: dotnet-build-windows-latest
        path: publish/windows
      continue-on-error: true

    - uses: actions/download-artifact@v4
      with:
        name: dotnet-build-macos-latest
        path: publish/macos
      continue-on-error: true

    - name: Archive Release
      run: |
        zip -r release-ubuntu.zip publish/ubuntu
        zip -r release-windows.zip publish/windows
        zip -r release-macos.zip publish/macos

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.VERSION }}
        name: Release ${{ env.VERSION }}
        files: |
          release-ubuntu.zip
          release-windows.zip
          release-macos.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
